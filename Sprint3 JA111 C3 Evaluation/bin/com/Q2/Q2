Question 2:
Briefly explain the difference between Early and Late Binding with examples.

Ans: 

	Early Binding:
	-> It is a compile-time process.
	-> The method definition  and method call are linked during the compile time.
	-> Actual object is not used for binding.
	-> For example: Method Overloading;
	
Example:
	public class A {
		public static class X{
		static void p(){
			System.out.println("Hello");
		}
	}
		public static class Y extends X{
		static void p(){
			System.out.println("Hello in y");
		}
	}
	
	public static void main(String[] args){
	
		X x1 = new X();
		x1.p();   ----- Hello;
		X y1 = new Y();
		y1.p();   ---- Hello in y
	
	}
	
 }
	
	Late Binding:
	-> It is a run-time process.
	-> The method definition  and method call are linked during the run time.
	->  Actual object is used for binding.
	-> For example: Method Overriding;

Example:
	public class A {
		public static class X{
		void p(){
			System.out.println("Hello");
		}
	}
		public static class Y extends X{
		@Override
		void p(){
			System.out.println("Hello in y");
		}
	}
	
	public static void main(String[] args){
	
		X x1 = new X();
		x1.p();   ----- Hello;
		X y1 = new Y();
		y1.p();   ---- Hello in y
	
	}
	
 }




